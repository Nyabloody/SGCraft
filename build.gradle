buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven {
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'commons-io:commons-io:2.4'
    }
}

apply plugin: 'net.minecraftforge.gradle'

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": jarName,
                "Specification-Vendor": "AlmuraDev",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"bsixel",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

archivesBaseName = jarName

repositories {
    maven { url = "http://files.minecraftforge.net/maven" } // spongeforge
    maven { url = "http://maven.cil.li/" }
    maven { url 'https://squiddev.cc/maven/' } // CC: Tweaked
    maven {
        name = 'oss-sonatype-public'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven { url = "http://maven.ic2.player.to" }
    maven { url = "http://repo.spongepowered.org/maven" }
    maven { url = "http://cc.crzd.me/maven/" }
    maven { url = "https://archiva-repository.apache.org/archiva/repository/snapshots" }
    maven {
        name = 'CoFH Maven'
        url = 'http://maven.covers1624.net'
    }
    flatDir {
        dirs "lib"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.4-35.1.4'

    compile 'com.google.code.gson:gson:2.8.0'
    compile 'commons-io:commons-io:2.7-SNAPSHOT'
    implementation fg.deobf("org.squiddev:cc-tweaked-1.16.4:1.94.0")
}

minecraft {
    version '1.16.4'
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20201028-1.16.3'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', project.jarName, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                sgcraft {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main {
    compileClasspath += files("lib")
    java.srcDirs "src/base", "src/mod"
    resources.srcDirs "src/resources"
}

processResources {

    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.mcversion

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.mcSingularVersion, 'modid':project.jarName
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
